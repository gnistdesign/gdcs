<?xml version="1.0"?>
<ruleset name="GnistDesignWP">
  <description>Gnist Design Coding Standards - WordPress</description>

  <!-- Colors -->
  <arg name="colors" />

  <!-- Pass some flags to PHPCS:
     p flag: Show progress of the run.
     s flag: Show sniff codes in all reports.
     v flag: Print verbose output.
     n flag: Do not print warnings.
  -->
  <arg value="psv" />

  <!-- Exclude files -->
  <exclude-pattern>node_modules</exclude-pattern>
  <exclude-pattern>vendor</exclude-pattern>
  <exclude-pattern>bin</exclude-pattern>
  <exclude-pattern>tests/</exclude-pattern>

  <!-- Check all files in this directory and the directories below it. -->
  <file>.</file>

  <!-- Scan only PHP files -->
  <arg name="extensions" value="php" />

  <!-- WordPress -->
  <rule ref="WordPress">
		<exclude name="WordPress.NamingConventions.ValidHookName.UseUnderscores" />
    <exclude name="PEAR.Functions.FunctionCallSignature.CloseBracketLine" />
    <exclude name="PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket" />
    <exclude name="PEAR.Functions.FunctionCallSignature.MultipleArguments" />
    <exclude name="WordPress.PHP.DisallowShortTernary.Found" />
    <exclude name="WordPress.Files.FileName.NotHyphenatedLowercase" />
    <exclude name="WordPress.Files.FileName.InvalidClassFileName" />
    <exclude name="WordPress.WP.I18n.NonSingularStringLiteralDomain" />
    <exclude name="WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase" />
    <exclude name="WordPress.WhiteSpace.OperatorSpacing.SpacingBefore" />
    <exclude name="Generic.Functions.FunctionCallArgumentSpacing.TooMuchSpaceAfterComma" />
  </rule>

  <rule ref="WordPress.NamingConventions.ValidHookName">
    <properties>
      <property name="additionalWordDelimiters" value="/" />
    </properties>
  </rule>

  <rule ref="WordPress.WP.AlternativeFunctions">
    <properties>
      <property name="exclude" value="file_get_contents" />
    </properties>
  </rule>

  <!-- https://github.com/PHPCompatibility/PHPCompatibilityWP - analyse the codebase of a WordPress-based project for PHP cross-version compatibility -->
  <rule ref="PHPCompatibilityWP" />

  <!-- https://github.com/Automattic/phpcs-neutron-standard - modern (PHP >7) linting guidelines -->
  <rule ref="NeutronStandard.StrictTypes.RequireStrictTypes.StrictTypes" />
  <rule ref="NeutronStandard.Functions.TypeHint.NoReturnType" />
  <rule ref="NeutronStandard.Functions.TypeHint.NoArgumentType" />

  <!-- Let's also check that everything is properly documented. -->
  <rule ref="WordPress-Docs" />

  <!-- Add in some extra rules from other standards. -->
  <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter" />
  <rule ref="Generic.Commenting.Todo" />

  <!-- Verify that no WP functions are used which are deprecated or have been removed.
     The minimum version set here should be in line with the minimum WP version
     as set in the "Requires at least" tag in the readme.txt file. -->
  <rule ref="WordPress.WP.DeprecatedFunctions">
    <properties>
      <property name="minimum_supported_version" value="5.4" />
    </properties>
  </rule>
</ruleset>
